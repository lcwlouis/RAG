query,expected_answer,citations
What is the purpose of the CODEOWNERS file?,The code owners file controls who is tagged for review for any given pull request.,['.github/CODEOWNERS']
Who is the code owner for all files in the repository?,The GitHub team `@GoogleCloudPlatform/teams/generative-ai-devrel` is the code owner for all files.,['.github/CODEOWNERS']
Why are GitHub teams preferred over individuals in the CODEOWNERS file?,GitHub teams are preferred over individuals to make it easier to find a suitable owner when someone is OOO or leaves the team.,['.github/CODEOWNERS']
What sections are included in the bug report issue template?,"The bug report template includes sections for 'Describe the bug', 'To Reproduce', 'Expected behavior', 'Screenshots', 'Versions', and 'Additional context'.",['.github/ISSUE_TEMPLATE/bug_report.md']
What are the suggested steps to reproduce a bug in the bug report template?,"To reproduce a bug, the template suggests steps like 'Go to '...'', 'Click on '....'', and 'See error'.",['.github/ISSUE_TEMPLATE/bug_report.md']
What version information is requested in the bug report template?,"The bug report template asks for OS, ADK version, and Python version under the 'Versions' section.",['.github/ISSUE_TEMPLATE/bug_report.md']
What information should be provided when submitting a feature request?,"The feature request template includes sections for 'Is your feature request related to a problem? Please describe.', 'Describe the solution you'd like', 'Describe alternatives you've considered', and 'Additional context'.",['.github/ISSUE_TEMPLATE/feature_request.md']
What are the key descriptions required for a feature request?,"The feature request template asks for a clear and concise description of the problem, the desired solution, and any alternative solutions considered.",['.github/ISSUE_TEMPLATE/feature_request.md']
Who is the allowed copyright holder according to the header checker lint configuration?,"The allowed copyright holder is ""Google LLC"".",['.github/header-checker-lint.yml']
What license is allowed by the header checker lint configuration?,"The allowed license is ""Apache-2.0"".",['.github/header-checker-lint.yml']
Which file patterns are ignored by the header checker lint?,"The header checker lint ignores files matching ""**/requirements*.txt"", ""**/__init__.py"", and ""**/constraints*.txt"".",['.github/header-checker-lint.yml']
Does the header checker lint enforce a specific license year?,The header checker lint ignores the license year.,['.github/header-checker-lint.yml']
What source file extension is checked by the header checker lint?,"The source file extension configured for the header checker lint is ""py"".",['.github/header-checker-lint.yml']
What is the base configuration extended by Renovate?,"The Renovate configuration extends from ""config:recommended"".",['.github/renovate.json5']
What is the `prConcurrentLimit` in the Renovate configuration?,The `prConcurrentLimit` is set to 0 in the Renovate configuration.,['.github/renovate.json5']
What is the `rebaseWhen` setting for Renovate?,"The `rebaseWhen` setting in Renovate is ""never"".",['.github/renovate.json5']
Is the dependency dashboard enabled in Renovate?,The `dependencyDashboard` is enabled in the Renovate configuration.,['.github/renovate.json5']
Which files are matched for pip requirements by Renovate?,"Renovate's `pip_requirements` fileMatch includes ""requirements.txt"", ""requirements-test.txt"", ""requirements-composer.txt"", ""constraints.txt"", and ""constraints-test.txt"".",['.github/renovate.json5']
What paths does Renovate ignore?,"Renovate ignores paths under ""**/target/**"".",['.github/renovate.json5']
How are Maven dependencies grouped in Renovate?,"Maven datasources matching ""pom.xml"" files are grouped under ""Java Maven Dependencies"".",['.github/renovate.json5']
How are Python pip dependencies grouped in Renovate?,"PyPI datasources matching ""requirements.txt"" files are grouped under ""Python pip Dependencies"".",['.github/renovate.json5']
What special rule applies to pytest package updates in Renovate?,"For packages matching ""/pytest/"", minor and patch updates are separated.",['.github/renovate.json5']
What is the schedule for minor updates in Renovate?,Minor updates are scheduled monthly.,['.github/renovate.json5']
What is the schedule for patch updates in Renovate?,Patch updates are scheduled quarterly.,['.github/renovate.json5']
How are Java minor updates handled by Renovate?,"Maven minor updates are grouped as ""Java Minor Updates"" and scheduled monthly.",['.github/renovate.json5']
How are Java patch updates handled by Renovate?,"Maven patch updates are grouped as ""Java Patch Updates"" and scheduled quarterly.",['.github/renovate.json5']
When are vulnerability alerts scheduled by Renovate?,"Vulnerability alerts are scheduled ""at any time"".",['.github/renovate.json5']
What are the automerge settings in Renovate?,"Platform automerge is enabled, and the automerge type is ""branch"".",['.github/renovate.json5']
When is the 'Publish Docs' workflow triggered?,The 'Publish Docs' workflow is triggered on pushes to the 'main' branch.,['.github/workflows/publish-docs.yaml']
What permissions are required for the 'Publish Docs' workflow?,The 'Publish Docs' workflow requires 'contents: write' permissions.,['.github/workflows/publish-docs.yaml']
What operating system does the 'deploy' job use in the 'Publish Docs' workflow?,The 'deploy' job in the 'Publish Docs' workflow runs on 'ubuntu-latest'.,['.github/workflows/publish-docs.yaml']
What Git user name and email are configured in the 'Publish Docs' workflow?,The Git credentials are configured with `user.name` as `github-actions[bot]` and `user.email` as `41898282+github-actions[bot]@users.noreply.github.com`.,['.github/workflows/publish-docs.yaml']
What Python version is set up for the 'Publish Docs' workflow?,The 'Publish Docs' workflow sets up Python version 3.x.,['.github/workflows/publish-docs.yaml']
What is the cache key and path for mkdocs-material in the 'Publish Docs' workflow?,"The cache key for mkdocs-material is `mkdocs-material-${{ env.cache_id }}`, and the path is `.cache`.",['.github/workflows/publish-docs.yaml']
How are dependencies installed in the 'Publish Docs' workflow?,The 'Publish Docs' workflow installs dependencies using `pip install -r requirements.txt`.,['.github/workflows/publish-docs.yaml']
What command is used to deploy the documentation in the 'Publish Docs' workflow?,The 'Publish Docs' workflow deploys documentation using `mkdocs gh-deploy --force`.,['.github/workflows/publish-docs.yaml']
What are the triggers for the 'Python Lint' workflow?,"The 'Python Lint' workflow is triggered on pushes to the 'main' branch affecting 'samples/python/**' or '.github/workflows/python-lint.yaml', on pull requests (opened, reopened, synchronize) affecting the same paths, and on a weekly schedule (cron: ""0 0 * * 0"").",['.github/workflows/python-lint.yaml']
What OS is used for the 'get_sample_dirs' job in the Python lint workflow?,The 'get_sample_dirs' job in the 'Python Lint' workflow runs on 'ubuntu-latest'.,['.github/workflows/python-lint.yaml']
What action is used to checkout the repository in the 'get_sample_dirs' job?,The 'get_sample_dirs' job uses `actions/checkout@v4` with `ref: ${{ github.event.pull_request.head.sha }}`.,['.github/workflows/python-lint.yaml']
How does the 'get_sample_dirs' job identify sample directories?,"The 'get_sample_dirs' job finds sample directories using `find samples/python/ -type d -maxdepth 5 ! -path ""samples/python"" | jq -R -s 'split(""\n"")[:-1]'`.",['.github/workflows/python-lint.yaml']
What operating system is used for the 'lint' job in the Python lint workflow?,The 'lint' job in the 'Python Lint' workflow runs on 'ubuntu-latest'.,['.github/workflows/python-lint.yaml']
What Python versions are used for linting in the 'Python Lint' workflow?,"The 'lint' job uses a matrix strategy with Python versions ""3.9"", ""3.10"", ""3.11"", ""3.12"" and sample directories from the 'get_sample_dirs' job.",['.github/workflows/python-lint.yaml']
What linting tools are installed in the 'Python Lint' workflow?,The 'lint' job installs `black` and `flake8` for linting.,['.github/workflows/python-lint.yaml']
How are Black and Flake8 run in the 'Python Lint' workflow?,The 'lint' job runs Black and Flake8 by changing into each sample directory and executing `black .` and `flake8 .`.,['.github/workflows/python-lint.yaml']
What events trigger the 'Python Tests' workflow?,"The 'Python Tests' workflow is triggered on pushes to the 'main' branch affecting 'samples/python/**' or '.github/workflows/python-tests.yaml', on pull requests (opened, reopened, synchronize) affecting the same paths, and on a weekly schedule (cron: ""0 0 * * 0"").",['.github/workflows/python-tests.yaml']
What operating system is used for the 'build' job in the Python tests workflow?,The 'build' job in the 'Python Tests' workflow runs on 'ubuntu-latest'.,['.github/workflows/python-tests.yaml']
What Python versions are used for testing in the 'Python Tests' workflow?,"The 'build' job uses a matrix strategy with Python versions ""3.9"", ""3.10"", ""3.11"", ""3.12"" and sample directories from the 'get_sample_dirs' job.",['.github/workflows/python-tests.yaml']
"What is the `fail-fast` setting for the 'build' job in the 'Python Tests' workflow, and what does it mean?",The 'build' job has `fail-fast: false` to ensure that the workflow doesn't stop if one matrix configuration fails.,['.github/workflows/python-tests.yaml']
How are sample directories identified for testing in the 'Python Tests' workflow?,"The 'get_sample_dirs' step in the 'Python Tests' workflow finds sample directories by looking for directories containing `requirements.txt` files, excluding `.venv` paths.",['.github/workflows/python-tests.yaml']
What dependencies are installed for running tests in the 'Python Tests' workflow?,"The 'build' job installs `pytest` and `coverage`, along with dependencies from `requirements.txt` and `requirements-test.txt` within each sample directory.",['.github/workflows/python-tests.yaml']
How is pytest executed in the 'Python Tests' workflow?,Pytest is run by changing into the sample directory and executing `pytest | tee pytest.txt`.,['.github/workflows/python-tests.yaml']
How does the 'Python Tests' workflow determine if tests have failed?,"The workflow checks for failed tests by grepping for ""FAILED tests"", ""ERROR tests"", or ""[0-9]+ passed,"" in `pytest.txt`. If `failed_count` is greater than 0, the task fails.",['.github/workflows/python-tests.yaml']
"What test results are uploaded as artifacts in the 'Python Tests' workflow, and for how long are they retained?","The 'Python Tests' workflow uploads `pytest.txt` and the `htmlcov/` directory as artifacts, with a retention period of 30 days.",['.github/workflows/python-tests.yaml']
What Python byte-compiled files are ignored by Git?,"The `.gitignore` file includes `__pycache__/`, `*.py[cod]`, and `*$py.class` for byte-compiled/optimized/DLL Python files.",['.gitignore']
Which C extension files are ignored by Git?,The `.gitignore` file ignores `*.so` for C extensions.,['.gitignore']
What distribution and packaging related files are ignored by Git?,"The `.gitignore` file ignores `dist/`, `build/`, `develop-eggs/`, `eggs/`, `.eggs/`, `lib/`, `lib64/`, `parts/`, `sdist/`, `var/`, `wheels/`, `share/python-wheels/`, `*.egg-info/`, `.installed.cfg`, `*.egg`, and `MANIFEST` for distribution/packaging.",['.gitignore']
What PyInstaller files are ignored by Git?,The `.gitignore` file ignores `*.manifest` and `*.spec` for PyInstaller.,['.gitignore']
Which installer log files are ignored by Git?,The `.gitignore` file ignores `pip-log.txt` and `pip-delete-this-directory.txt` for installer logs.,['.gitignore']
What files related to unit tests and coverage reports are ignored by Git?,"The `.gitignore` file ignores `htmlcov/`, `.tox/`, `.nox/`, `.coverage`, `.coverage.*`, `.cache`, `nosetests.xml`, `coverage.xml`, `*.cover`, `*.py,cover`, `.hypothesis/`, and `.pytest_cache/` for unit test/coverage reports.",['.gitignore']
Which translation files are ignored by Git?,The `.gitignore` file ignores `*.mo` and `*.pot` for translations.,['.gitignore']
What Django-specific files are ignored by Git?,"The `.gitignore` file ignores `*.log`, `local_settings.py`, `db.sqlite3`, and `db.sqlite3-journal` for Django.",['.gitignore']
What Flask-specific files are ignored by Git?,The `.gitignore` file ignores `instance/` and `.webassets-cache` for Flask.,['.gitignore']
What Scrapy-specific files are ignored by Git?,The `.gitignore` file ignores `.scrapy` for Scrapy.,['.gitignore']
What Sphinx documentation build directory is ignored by Git?,The `.gitignore` file ignores `docs/_build/` for Sphinx documentation.,['.gitignore']
What PyBuilder-related files are ignored by Git?,The `.gitignore` file ignores `.pybuilder/` and `target/` for PyBuilder.,['.gitignore']
What Jupyter Notebook checkpoint files are ignored by Git?,The `.gitignore` file ignores `.ipynb_checkpoints` for Jupyter Notebook.,['.gitignore']
What IPython-related files are ignored by Git?,The `.gitignore` file ignores `profile_default/` and `ipython_config.py` for IPython.,['.gitignore']
What PDM configuration files are ignored by Git?,The `.gitignore` file ignores `.pdm.toml` and `.pdm-python` for PDM.,['.gitignore']
What directory related to PEP 582 is ignored by Git?,The `.gitignore` file ignores `__pypackages__/` for PEP 582.,['.gitignore']
What Celery-related files are ignored by Git?,The `.gitignore` file ignores `celerybeat-schedule` and `celerybeat.pid` for Celery.,['.gitignore']
What SageMath parsed files are ignored by Git?,The `.gitignore` file ignores `*.sage.py` for SageMath parsed files.,['.gitignore']
What common Python virtual environment directories are ignored by Git?,"The `.gitignore` file ignores `.venv`, `env/`, `venv/`, `ENV/`, `env.bak/`, and `venv.bak/` for Python environments.",['.gitignore']
What Spyder project settings files are ignored by Git?,The `.gitignore` file ignores `.spyderproject` and `.spyproject` for Spyder project settings.,['.gitignore']
What Rope project settings files are ignored by Git?,The `.gitignore` file ignores `.ropeproject` for Rope project settings.,['.gitignore']
What mypy cache and configuration files are ignored by Git?,"The `.gitignore` file ignores `.mypy_cache/`, `.dmypy.json`, and `dmypy.json` for mypy.",['.gitignore']
What Pyre type checker directory is ignored by Git?,The `.gitignore` file ignores `.pyre/` for Pyre type checker.,['.gitignore']
What pytype static type analyzer directory is ignored by Git?,The `.gitignore` file ignores `.pytype/` for pytype static type analyzer.,['.gitignore']
What Cython debug symbol directory is ignored by Git?,The `.gitignore` file ignores `cython_debug/` for Cython debug symbols.,['.gitignore']
What Mac Finder files are ignored by Git?,The `.gitignore` file ignores `.DS_Store` for Mac Finder files.,['.gitignore']
What mkdocs documentation build output is ignored by Git?,The `.gitignore` file ignores `docs/site` for mkdocs documentation.,['.gitignore']
What Hugo build files are ignored by Git?,The `.gitignore` file ignores `/site/public` and `.hugo_build.lock` for Hugo.,['.gitignore']
What VS Code personal settings file is ignored by Git?,The `.gitignore` file ignores `.vscode/settings.json` for VS Code Personal Settings.,['.gitignore']
What is required before contributing to the project?,Contributions to this project must be accompanied by a Contributor License Agreement (CLA).,['CONTRIBUTING.md']
Where can I sign the Contributor License Agreement?,You can visit `https://cla.developers.google.com/` to see your current agreements or to sign a new one.,['CONTRIBUTING.md']
What community guidelines does the project follow?,The project adheres to Google's Open Source Community Guidelines.,['CONTRIBUTING.md']
How can I find tasks to work on for contribution?,You can find something to work on by checking the GitHub Issues at `https://github.com/google/adk-docs/issues` for bug reports or feature requests.,['CONTRIBUTING.md']
What command is used to clone the repository?,"To clone the repository, use `git clone git@github.com:google/adk-docs.git` and then `cd adk-docs`.",['CONTRIBUTING.md']
How do I set up a virtual environment for development?,"To create and activate a virtual environment, use `python -m venv venv` and then `source venv/bin/activate`.",['CONTRIBUTING.md']
How are development dependencies installed?,"To install dependencies, use `pip install -r requirements.txt`.",['CONTRIBUTING.md']
What command starts the local development server?,"To run the local development server, use `mkdocs serve`.",['CONTRIBUTING.md']
"What is the default address for the local development server, and does it auto-reload?",The local development server typically starts at `http://127.0.0.1:8000/` and automatically reloads when changes are saved.,['CONTRIBUTING.md']
What is the process for code reviews?,All contributions undergo a review process using GitHub Pull Requests (PRs).,['CONTRIBUTING.md']
Who reviews pull requests and what happens after approval?,"Project maintainers review PRs, provide feedback, or request changes. Once approved and checks pass, the PR is merged into the main branch.",['CONTRIBUTING.md']
What is the license for this project?,"The project is licensed under the Apache License, Version 2.0, January 2004.",['LICENSE']
What does 'License' mean in the Apache License 2.0?,"The License defines the terms and conditions for use, reproduction, and distribution.",['LICENSE']
Define 'Legal Entity' as per the Apache License 2.0.,"A ""Legal Entity"" means the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity, where ""control"" involves power over direction/management or ownership of 50% or more of outstanding shares.",['LICENSE']
Who is referred to as 'You' in the Apache License 2.0?,"""You"" (or ""Your"") means an individual or Legal Entity exercising permissions granted by this License.",['LICENSE']
What is 'Source' form according to the Apache License 2.0?,"""Source"" form means the preferred form for making modifications, including software source code, documentation source, and configuration files.",['LICENSE']
What is 'Object' form according to the Apache License 2.0?,"""Object"" form means any form resulting from mechanical transformation or translation of a Source form, such as compiled object code or generated documentation.",['LICENSE']
What does 'Work' refer to in the Apache License 2.0?,"""Work"" means the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice.",['LICENSE']
What constitutes 'Derivative Works' under the Apache License 2.0?,"""Derivative Works"" are works based on (or derived from) the Work, where editorial revisions, annotations, or elaborations represent an original work of authorship. It excludes works that remain separable or merely link to the interfaces of the Work.",['LICENSE']
What is a 'Contribution' in the context of the Apache License 2.0?,"""Contribution"" means any work of authorship, including original Work or modifications, intentionally submitted to Licensor for inclusion in the Work by the copyright owner or authorized entity.",['LICENSE']
Who is a 'Contributor' according to the Apache License 2.0?,"""Contributor"" means Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.",['LICENSE']
What copyright license is granted by Contributors under Apache License 2.0?,"Each Contributor grants a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.",['LICENSE']
What patent license is granted by Contributors under Apache License 2.0?,"Each Contributor grants a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, applicable only to patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or in combination with the Work.",['LICENSE']
Under what condition does the patent license granted by Apache License 2.0 terminate?,The patent license terminates if You institute patent litigation against any entity alleging that the Work or a Contribution constitutes direct or contributory patent infringement.,['LICENSE']
What are the conditions for redistribution of the Work or Derivative Works?,"When redistributing, You must give other recipients a copy of the License, cause modified files to carry prominent notices of changes, retain copyright/patent/trademark/attribution notices from the Source form, and include a readable copy of attribution notices from the ""NOTICE"" text file (if applicable).",['LICENSE']
Can I add my own copyright statement or different license terms to my modifications?,"You may add Your own copyright statement to Your modifications and provide additional or different license terms for Your modifications or Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the License conditions.",['LICENSE']
What terms apply to submitted Contributions?,"Unless explicitly stated otherwise, any Contribution intentionally submitted for inclusion in the Work shall be under the terms and conditions of this License, without any additional terms or conditions.",['LICENSE']
Does the Apache License 2.0 grant permission to use Licensor's trademarks?,"This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.",['LICENSE']
What warranties are disclaimed by the Apache License 2.0?,"The Work (and Contributions) are provided ""AS IS"", WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.",['LICENSE']
What is the limitation of liability for Contributors under the Apache License 2.0?,"In no event shall any Contributor be liable for damages (direct, indirect, special, incidental, or consequential) arising from the License or use/inability to use the Work, unless required by applicable law or agreed to in writing.",['LICENSE']
Can I accept warranty or additional liability when redistributing the Work?,"You may offer and charge a fee for acceptance of support, warranty, indemnity, or other liability obligations consistent with the License, but only on Your own behalf and responsibility, indemnifying Contributors for any liability incurred.",['LICENSE']
What does ADK stand for?,ADK stands for Agent Development Kit.,['README.md']
What is the Agent Development Kit (ADK)?,"ADK is an open-source, code-first Python toolkit for building, evaluating, and deploying sophisticated AI agents with flexibility and control.",['README.md']
Is ADK limited to Google models or deployments?,"ADK is model-agnostic, deployment-agnostic, and built for compatibility with other frameworks, although it is optimized for Gemini and the Google ecosystem.",['README.md']
What was the design philosophy behind ADK regarding agent development?,"ADK was designed to make agent development feel more like software development, making it easier to create, deploy, and orchestrate agentic architectures.",['README.md']
What are the key features of ADK?,"Key features of ADK include a rich tool ecosystem, code-first development, modular multi-agent systems, and deploy anywhere capabilities.",['README.md']
What types of tools can be integrated with ADK agents?,"ADK allows utilizing pre-built tools, custom functions, OpenAPI specs, or integrating existing tools for tight integration with the Google ecosystem.",['README.md']
How does ADK support code-first development?,"ADK supports defining agent logic, tools, and orchestration directly in Python for ultimate flexibility, testability, and versioning.",['README.md']
How does ADK support modular multi-agent systems?,ADK enables designing scalable applications by composing multiple specialized agents into flexible hierarchies.,['README.md']
Where can agents built with ADK be deployed?,Agents built with ADK can be easily containerized and deployed on Cloud Run or scaled seamlessly with Vertex AI Agent Engine.,['README.md']
How do I install ADK?,You can install ADK using `pip install google-adk`.,['README.md']
Where can I find the full documentation for ADK?,The full documentation for ADK can be found at `https://google.github.io/adk-docs`.,['README.md']
How can I contribute to the ADK project?,"Contributions are welcome, including bug reports, feature requests, documentation improvements, or code contributions. Contributors should refer to the Contributing Guidelines.",['README.md']
What license does the ADK project use?,The ADK project is licensed under the Apache 2.0 License.,['README.md']
What are the terms for preview features in ADK?,"The preview feature is subject to the ""Pre-GA Offerings Terms"" in the General Service Terms section of the Service Specific Terms, available ""as is"" with limited support.",['README.md']
What is the warning associated with building custom agents?,Building custom agents by directly implementing `_run_async_impl` provides powerful control but is more complex than using predefined `LlmAgent` or standard `WorkflowAgent` types.,['docs/agents/custom-agents.md']
What defines a Custom Agent in ADK?,A Custom Agent is any class that inherits from `google.adk.agents.BaseAgent` and implements its core execution logic within the `_run_async_impl` asynchronous method.,['docs/agents/custom-agents.md']
When should one use a Custom Agent instead of standard Workflow Agents?,"Custom agents are needed for conditional logic, complex state management, external integrations, dynamic agent selection, and unique workflow patterns not covered by standard workflow agents.",['docs/agents/custom-agents.md']
What is the core method for defining a custom agent's behavior?,The heart of any custom agent is the `_run_async_impl` method.,['docs/agents/custom-agents.md']
What is the signature and return type requirement for `_run_async_impl`?,The `_run_async_impl` method must be an `async def` function and return an `AsyncGenerator` to yield events.,['docs/agents/custom-agents.md']
What is the purpose of the `ctx` parameter in `_run_async_impl`?,"The `ctx` (InvocationContext) parameter provides access to crucial runtime information, especially `ctx.session.state` for sharing data.",['docs/agents/custom-agents.md']
How do custom agents call sub-agents?,"Sub-agents are invoked using their `run_async` method, and their events are yielded back to the runner.",['docs/agents/custom-agents.md']
How is state managed within a custom agent?,State is managed by reading from and writing to the session state dictionary (`ctx.session.state`).,['docs/agents/custom-agents.md']
What Python constructs are used for control flow in custom agents?,"Control flow within `_run_async_impl` is implemented using standard Python constructs like `if`/`elif`/`else`, `for`/`while` loops, and `try`/`except`.",['docs/agents/custom-agents.md']
How are sub-agents initialized and made accessible within a custom agent?,Sub-agents are typically passed into the custom agent's `__init__` method and stored as instance attributes.,['docs/agents/custom-agents.md']
Why is the `sub_agents` list important when initializing `BaseAgent` for a custom agent?,The `sub_agents` list should be passed when initializing `BaseAgent` to inform the framework about the immediate hierarchy for features like lifecycle management and introspection.,['docs/agents/custom-agents.md']
How do sub-agents and orchestrators communicate data?,`ctx.session.state` is the standard way sub-agents communicate results back to the orchestrator and how the orchestrator passes necessary inputs down.,['docs/agents/custom-agents.md']
What is the goal of the `StoryFlowAgent` example?,"The `StoryFlowAgent` example demonstrates a multi-stage content generation workflow with conditional logic, specifically regenerating a story if the final tone check fails.",['docs/agents/custom-agents.md']
Why is a custom agent necessary for the `StoryFlowAgent` example?,"The `StoryFlowAgent` needs a custom agent because standard workflow agents lack built-in conditional branching based on a sub-agent's task outcome, requiring custom Python logic (`if tone == ""negative"": ...`).",['docs/agents/custom-agents.md']
Describe the execution flow of the `StoryFlowAgent`.,"The `StoryFlowAgent`'s execution logic first runs a `story_generator`, then a `loop_agent` for critique and revision, followed by a `sequential_agent` for grammar and tone checks. Finally, it conditionally calls the `story_generator` again if the tone check is ""negative"".",['docs/agents/custom-agents.md']
What is the importance of `output_key` in LLM sub-agents for custom agents?,The `output_key` parameter of `LlmAgent` is crucial for placing results into the `session.state` where other agents or the custom orchestrator can access them.,['docs/agents/custom-agents.md']
What is an Agent in the Agent Development Kit (ADK)?,"In ADK, an Agent is a self-contained execution unit designed to act autonomously to achieve specific goals.",['docs/agents/index.md']
What is the foundational class for all agents in ADK?,The foundation for all agents in ADK is the `BaseAgent` class.,['docs/agents/index.md']
What are the three core agent categories in ADK?,"The three main categories of agents in ADK are LLM Agents (`LlmAgent`, `Agent`), Workflow Agents (`SequentialAgent`, `ParallelAgent`, `LoopAgent`), and Custom Agents.",['docs/agents/index.md']
What is the primary function of LLM Agents?,"LLM Agents utilize Large Language Models (LLMs) for reasoning, understanding natural language, making decisions, generating responses, and dynamically deciding how to proceed or which tools to use.",['docs/agents/index.md']
What is the primary function of Workflow Agents?,"Workflow Agents control the execution flow of other agents in predefined, deterministic patterns (sequence, parallel, or loop) without using an LLM for the flow control itself.",['docs/agents/index.md']
What is the primary function of Custom Agents?,"Custom Agents are created by extending `BaseAgent` directly to implement unique operational logic, specific control flows, or specialized integrations not covered by standard types.",['docs/agents/index.md']
What is the core engine of an LLM Agent?,LLM Agents use a Large Language Model (LLM) as their core engine.,['docs/agents/index.md']
What is the core engine of a Workflow Agent?,"Workflow Agents use predefined logic (Sequence, Parallel, Loop) as their core engine.",['docs/agents/index.md']
What is the core engine of a Custom Agent?,Custom Agents use custom Python code as their core engine.,['docs/agents/index.md']
What is the determinism level for each agent type?,"LLM Agents are non-deterministic (flexible), Workflow Agents are deterministic (predictable), and Custom Agents can be either based on their implementation.",['docs/agents/index.md']
What are the primary uses of LLM Agents?,LLM Agents are primarily used for language tasks and dynamic decisions.,['docs/agents/index.md']
What are the primary uses of Workflow Agents?,Workflow Agents are primarily used for structured processes and orchestration.,['docs/agents/index.md']
What are the primary uses of Custom Agents?,Custom Agents are primarily used for tailored requirements and specific workflows.,['docs/agents/index.md']
How do different agent types work together in ADK?,"The true power of ADK often comes from combining different agent types into multi-agent systems, where LLM Agents handle intelligent tasks, Workflow Agents manage process flow, and Custom Agents provide specialized capabilities.",['docs/agents/index.md']
What is the role of `LlmAgent` in ADK?,"The `LlmAgent` (often aliased as `Agent`) is the ""thinking"" part of an ADK application, leveraging an LLM for reasoning, natural language understanding, decision-making, response generation, and tool interaction.",['docs/agents/llm-agents.md']
Is `LlmAgent` behavior deterministic or non-deterministic?,"`LlmAgent` behavior is non-deterministic, as it uses the LLM to interpret instructions and context, deciding dynamically how to proceed.",['docs/agents/llm-agents.md']
What are the key steps in building an effective `LlmAgent`?,"Building an effective `LlmAgent` involves defining its identity, clearly guiding its behavior through instructions, and equipping it with necessary tools and capabilities.",['docs/agents/llm-agents.md']
Why is the `name` parameter important for an `LlmAgent`?,"Every agent needs a unique string identifier for its `name`, which is crucial for internal operations, especially in multi-agent systems.",['docs/agents/llm-agents.md']
What is the purpose of the `description` parameter for an `LlmAgent`?,"The `description` parameter provides a concise summary of the agent's capabilities, primarily used by other LLM agents to determine if they should route a task to this agent.",['docs/agents/llm-agents.md']
What does the `model` parameter specify for an `LlmAgent`?,"The `model` parameter specifies the underlying LLM that will power the agent's reasoning, such as ""gemini-2.0-flash"".",['docs/agents/llm-agents.md']
What is the most critical parameter for shaping an `LlmAgent`'s behavior?,"The `instruction` parameter is a string (or function returning a string) that shapes the `LlmAgent`'s behavior by defining its core task, personality, constraints, tool usage, and desired output format.",['docs/agents/llm-agents.md']
What are some tips for writing effective instructions for an `LlmAgent`?,"Tips for effective instructions include being clear and specific, using Markdown for readability, providing few-shot examples, and guiding tool use by explaining when and why to use them.",['docs/agents/llm-agents.md']
How can dynamic values be inserted into an `LlmAgent`'s instruction?,The `instruction` can use `{var}` syntax to insert dynamic values from the state variable named `var` or `{artifact.var}` for text content of an artifact. A `?` can be appended to ignore errors if the variable/artifact doesn't exist.,['docs/agents/llm-agents.md']
What is the purpose of `tools` for an `LlmAgent`?,"Tools give `LlmAgent` capabilities beyond the LLM's built-in knowledge, allowing it to interact with the outside world, perform calculations, fetch real-time data, or execute specific actions.",['docs/agents/llm-agents.md']
What types of values can be provided to the `tools` parameter?,"The `tools` parameter accepts a list of Python functions (wrapped as `FunctionTool`), instances of `BaseTool`, or instances of other agents (`AgentTool`).",['docs/agents/llm-agents.md']
How does the LLM decide which tool to call?,"The LLM uses the function/tool names, descriptions (from docstrings or `description` field), and parameter schemas to decide which tool to call.",['docs/agents/llm-agents.md']
How can one fine-tune LLM generation for an `LlmAgent`?,"The `generate_content_config` parameter allows adjusting how the underlying LLM generates responses, controlling parameters like `temperature`, `max_output_tokens`, `top_p`, and `top_k`.",['docs/agents/llm-agents.md']
What is the purpose of `input_schema` for an `LlmAgent`?,"The `input_schema` defines a Pydantic `BaseModel` for the expected input structure, requiring the user message content to be a JSON string conforming to this schema.",['docs/agents/llm-agents.md']
What is the purpose and constraint of `output_schema` for an `LlmAgent`?,"The `output_schema` defines a Pydantic `BaseModel` for the desired output structure, requiring the agent's final response to be a JSON string conforming to this schema. Using `output_schema` disables the agent's ability to use tools or transfer control to other agents.",['docs/agents/llm-agents.md']
How can an `LlmAgent`'s final response be automatically saved to the session state?,"The `output_key` parameter, if set, automatically saves the text content of the agent's final response to the session's state dictionary under the specified key.",['docs/agents/llm-agents.md']
How can an `LlmAgent`'s access to prior conversation history be controlled?,"The `include_contents` parameter controls whether the agent receives the prior conversation history. `'default'` sends relevant history, while `'none'` means the agent operates solely on its current instruction and input.",['docs/agents/llm-agents.md']
How can an `LlmAgent` be configured for planning and code execution?,"For complex reasoning, a `BasePlanner` instance can be assigned to `planner` to enable multi-step reasoning, and a `BaseCodeExecutor` instance to `code_executor` to allow the agent to execute code blocks.",['docs/agents/llm-agents.md']
What are the two primary mechanisms for model integration in ADK?,ADK primarily uses two mechanisms for model integration: direct string/registry for Google Cloud models and wrapper classes (like `LiteLlm`) for broader compatibility.,['docs/agents/models.md']
How are Google Gemini models integrated with `LlmAgent`?,"For Google Gemini models, you typically provide the model name or endpoint resource string directly to the `LlmAgent`'s `model` parameter.",['docs/agents/models.md']
What is required to use voice/video streaming with ADK?,"To use voice/video streaming in ADK, you need Gemini models that support the Live API, whose model IDs can be found in Google AI Studio or Vertex AI documentation.",['docs/agents/models.md']
What environment variables are needed to use Google AI Studio models?,"For Google AI Studio, you need an API key set as `GOOGLE_API_KEY` and `GOOGLE_GENAI_USE_VERTEXAI` set to `FALSE`.",['docs/agents/models.md']
What environment variables and authentication steps are required for Vertex AI models?,"For Vertex AI, you need to authenticate with `gcloud auth application-default login`, set `GOOGLE_CLOUD_PROJECT` and `GOOGLE_CLOUD_LOCATION`, and set `GOOGLE_GENAI_USE_VERTEXAI` to `TRUE`.",['docs/agents/models.md']
How does ADK integrate with models from providers like OpenAI or Anthropic (non-Vertex AI)?,"To access models from providers like OpenAI, Anthropic (non-Vertex AI), or Cohere, ADK offers integration through the LiteLLM library by instantiating the `LiteLlm` wrapper class.",['docs/agents/models.md']
What is the setup process for using LiteLLM with ADK?,"To use LiteLLM, you need to install `litellm` and set provider API keys as environment variables (e.g., `OPENAI_API_KEY`).",['docs/agents/models.md']
"Which Ollama provider name should be used with LiteLLM in ADK, and why?","For Ollama integration, it is important to set the provider `ollama_chat` instead of `ollama` to avoid unexpected behaviors like infinite tool call loops and ignoring previous context.",['docs/agents/models.md']
What environment variable should be set for Ollama API base URL?,"When using Ollama with LiteLLM, it is recommended to set the environment variable `OLLAMA_API_BASE` to point to the Ollama server (e.g., `http://localhost:11434`).",['docs/agents/models.md']
"Can Ollama be used with the `openai` provider name, and if so, what are the requirements?","Alternatively, `openai` can be used as the provider name for Ollama, but this requires setting `OPENAI_API_BASE=http://localhost:11434/v1` and `OPENAI_API_KEY=anything`.",['docs/agents/models.md']
How can I debug requests sent to the Ollama server from ADK?,"To debug requests sent to the Ollama server, you can add `import litellm; litellm._turn_on_debug()` in your agent code.",['docs/agents/models.md']
How are self-hosted models like those deployed with vLLM integrated into ADK?,"For self-hosted endpoints like vLLM, you instantiate the `LiteLlm` wrapper class, configured to point to your local model server's API base URL, and potentially include authentication headers.",['docs/agents/models.md']
What is an important consideration for tool use when deploying models with vLLM?,"When deploying models with tools like vLLM, ensure the serving tool supports and enables OpenAI-compatible tool/function calling.",['docs/agents/models.md']
How are models deployed to Vertex AI Endpoints integrated with ADK?,"For hosted and tuned models on Vertex AI, you pass the full Vertex AI Endpoint resource string (`projects/PROJECT_ID/locations/LOCATION/endpoints/ENDPOINT_ID`) directly to the `model` parameter of `LlmAgent`.",['docs/agents/models.md']
What is required to use third-party models like Anthropic Claude directly via Vertex AI in ADK?,"To use third-party models like Anthropic Claude directly via Vertex AI, you must manually register the `Claude` class using `LLMRegistry.register(Claude)` before creating an agent with the Claude model string.",['docs/agents/models.md']
What is a Multi-Agent System (MAS) in ADK?,"ADK supports building sophisticated applications by composing multiple, distinct `BaseAgent` instances into a Multi-Agent System (MAS).",['docs/agents/multi-agents.md']
What are the advantages of structuring an application as a multi-agent system in ADK?,"Structuring an application as a multi-agent system offers enhanced modularity, specialization, reusability, maintainability, and the ability to define structured control flows.",['docs/agents/multi-agents.md']
What are the core ADK primitives for agent composition?,"The core ADK primitives for agent composition include agent hierarchy (`parent_agent`, `sub_agents`) and Workflow Agents (`SequentialAgent`, `ParallelAgent`, `LoopAgent`).",['docs/agents/multi-agents.md']
How is agent hierarchy established in ADK?,"Agent hierarchy is established by passing a list of agent instances to the `sub_agents` argument when initializing a parent agent, which automatically sets the `parent_agent` attribute on each child.",['docs/agents/multi-agents.md']
Can an agent have multiple parent agents in ADK?,An agent instance can only be added as a sub-agent once; attempting to assign a second parent will result in a `ValueError`.,['docs/agents/multi-agents.md']
What is the importance of agent hierarchy in ADK?,The agent hierarchy defines the scope for Workflow Agents and influences potential targets for LLM-Driven Delegation.,['docs/agents/multi-agents.md']
What is the role of Workflow Agents in ADK?,Workflow Agents are specialized agents derived from `BaseAgent` that orchestrate the execution flow of their `sub_agents` without performing tasks themselves.,['docs/agents/multi-agents.md']
How does `SequentialAgent` orchestrate its sub-agents?,"`SequentialAgent` executes its `sub_agents` one after another in order, passing the same `InvocationContext` sequentially.",['docs/agents/multi-agents.md']
"How does `ParallelAgent` orchestrate its sub-agents, and how is state handled?","`ParallelAgent` executes its `sub_agents` in parallel, modifying the `InvocationContext.branch` for each child but allowing all children to access the same shared `session.state`.",['docs/agents/multi-agents.md']
"How does `LoopAgent` orchestrate its sub-agents, and what are its termination conditions?","`LoopAgent` executes its `sub_agents` sequentially in a loop, stopping if `max_iterations` is reached or if any sub-agent yields an `Event` with `actions.escalate=True`. It passes the same `InvocationContext` in each iteration.",['docs/agents/multi-agents.md']
